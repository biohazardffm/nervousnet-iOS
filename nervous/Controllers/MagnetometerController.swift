//
//  MagnetometerController.swift
//  nervousnet-iOS
//  
//  Created by __DEVNAME__ on 03 Mar 2016.
//  Copyright (c) 2016 ETHZ . All rights reserved.
//
//WARNING - THIS CODE IS AUTOGENERATED BY DEVSKETCH AND CAN BE OVERWRITTEN


import Foundation

class MagnetometerController : NSObject, SensorProtocol {
    
    func requestAuthorization(){}
    
    func startSensorUpdates(){}

    func stopSensorUpdates(){}

    
    /*
    var auth: Int = 0
    
    var timestamp: UInt64
    var magx: Float
    var magy: Float
    var magz: Float
    
    override init() {
        //self.manager = CMMotionManager()
    }
    
    func requestAuthorization() {
        print("requesting authorization for mag")
        self.auth = 0
    }
    
    func startSensorUpdates(manager: CMMotionManager, Double : freq) {
        requestAuthorization()
        
        if self.auth == 0 {
            return
        }
        
        manager.magnetometerUpdateInterval = freq
        manager.startMagnetometerUpdatesToQueue(NSOperationQueue.mainQueue()) {
            [weak self](data: CMMagnetometerData!, error: NSError!) in
            var currentTimeM :NSDate = NSDate()
            timestamp = UInt64(currentTimeM.timeIntervalSince1970*1000) // time to timestamp
            magX = Float(data.magneticField.x)
            magY = Float(data.magneticField.y)
            magZ = Float(data.magneticField.z)
        }
    }
    
    func stopSensorUpdates(manager: CMMotionManager) {
        self.manager.stopMagnetometerUpdates()
    }

    */

}

